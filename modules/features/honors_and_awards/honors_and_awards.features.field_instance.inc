<?php
/**
 * @file
 * honors_and_awards.features.field_instance.inc
 */

/**
 * Implements hook_field_default_field_instances().
 */
function honors_and_awards_field_default_field_instances() {
  $field_instances = array();

  // Exported field_instance: 'node-honors_and_awards-body'
  $field_instances['node-honors_and_awards-body'] = array(
    'bundle' => 'honors_and_awards',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'Additional information about the award and its recipient(s).',
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 0,
      ),
      'teaser' => array(
        'label' => 'hidden',
        'module' => 'text',
        'settings' => array(
          'trim_length' => 600,
        ),
        'type' => 'text_summary_or_trimmed',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'body',
    'label' => 'Details',
    'required' => 0,
    'rubik_edit_field_display' => 'default',
    'settings' => array(
      'display_summary' => 1,
      'text_processing' => 1,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => 5,
        'summary_rows' => 5,
      ),
      'type' => 'text_textarea_with_summary',
      'weight' => 4,
    ),
  );

  // Exported field_instance: 'node-honors_and_awards-field_date_mmyy'
  $field_instances['node-honors_and_awards-field_date_mmyy'] = array(
    'bundle' => 'honors_and_awards',
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'date',
        'settings' => array(
          'format_type' => 'long',
          'fromto' => 'both',
          'multiple_from' => '',
          'multiple_number' => '',
          'multiple_to' => '',
        ),
        'type' => 'date_default',
        'weight' => 1,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_date_mmyy',
    'label' => 'Award Date',
    'required' => 0,
    'rubik_edit_field_display' => 'default',
    'settings' => array(
      'default_value' => 'now',
      'default_value2' => 'same',
      'default_value_code' => '',
      'default_value_code2' => '',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'date',
      'settings' => array(
        'increment' => 15,
        'input_format' => 'd/m/Y - H:i:s',
        'input_format_custom' => '',
        'label_position' => 'above',
        'text_parts' => array(),
        'year_range' => '-3:+3',
      ),
      'type' => 'date_popup',
      'weight' => 2,
    ),
  );

  // Exported field_instance: 'node-honors_and_awards-field_files'
  $field_instances['node-honors_and_awards-field_files'] = array(
    'bundle' => 'honors_and_awards',
    'deleted' => 0,
    'description' => 'Attach file(s). <i>note: these files will be <b>publicly</b> accessible</i>',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'file',
        'settings' => array(),
        'type' => 'file_default',
        'weight' => 2,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_files',
    'label' => 'File(s)',
    'required' => 0,
    'rubik_edit_field_display' => 'default',
    'settings' => array(
      'description_field' => 1,
      'file_directory' => 'honors_and_awards',
      'file_extensions' => 'txt pdf doc png zip jpeg jpg tiff ppt',
      'max_filesize' => '',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'media',
      'settings' => array(
        'allowed_schemes' => array(
          'public' => 'public',
        ),
        'allowed_types' => array(
          'audio' => 0,
          'document' => 0,
          'image' => 0,
          'video' => 0,
        ),
        'browser_plugins' => array(
          'media_default--media_browser_1' => 0,
          'media_default--media_browser_my_files' => 0,
          'upload' => 0,
        ),
      ),
      'type' => 'media_generic',
      'weight' => 3,
    ),
  );

  // Exported field_instance: 'node-honors_and_awards-field_honor_and_award'
  $field_instances['node-honors_and_awards-field_honor_and_award'] = array(
    'bundle' => 'honors_and_awards',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '<b>Autocomplete</b> award name. If none exists one will be created automatically.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'taxonomy',
        'settings' => array(),
        'type' => 'taxonomy_term_reference_link',
        'weight' => 4,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_honor_and_award',
    'label' => 'Title',
    'required' => 1,
    'rubik_edit_field_display' => 'default',
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'autocomplete_deluxe',
      'settings' => array(
        'autocomplete_deluxe_path' => 'autocomplete_deluxe/taxonomy',
        'delimiter' => '',
        'limit' => 10,
        'min_length' => 0,
        'size' => 60,
      ),
      'type' => 'autocomplete_deluxe_taxonomy',
      'weight' => 0,
    ),
  );

  // Exported field_instance: 'node-honors_and_awards-field_honors_and_awards_rels'
  $field_instances['node-honors_and_awards-field_honors_and_awards_rels'] = array(
    'bundle' => 'honors_and_awards',
    'deleted' => 0,
    'description' => 'Add any user profiles here.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'relation_add',
        'settings' => array(),
        'type' => 'relation_add_endpoints_and_fields',
        'weight' => 3,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_honors_and_awards_rels',
    'label' => 'Recipient(s)',
    'required' => 0,
    'rubik_edit_field_display' => 'default',
    'settings' => array(
      'relation_type' => array(
        'was_awarded:reverse' => 'was_awarded:reverse',
      ),
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'relation_add',
      'settings' => array(
        'relation_endpoint_custom_label' => '',
        'relation_endpoint_label' => 'endpoint',
        'relation_endpoint_label_delta' => 0,
        'relation_endpoint_search_by_id' => 0,
      ),
      'type' => 'relation_add',
      'weight' => 3,
    ),
  );

  // Exported field_instance: 'node-honors_and_awards-field_node_refs'
  $field_instances['node-honors_and_awards-field_node_refs'] = array(
    'bundle' => 'honors_and_awards',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'Add references to other content. Useful for displaying related articles feeds in the sidebar.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'entityreference',
        'settings' => array(
          'link' => FALSE,
        ),
        'type' => 'entityreference_label',
        'weight' => 1,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_node_refs',
    'label' => 'Node Reference(s)',
    'required' => 0,
    'rubik_edit_field_display' => 'default',
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'match_operator' => 'CONTAINS',
        'path' => '',
        'references_dialog_add' => 0,
        'references_dialog_edit' => 0,
        'references_dialog_search' => 0,
        'references_dialog_search_view' => '',
        'size' => 60,
      ),
      'type' => 'entityreference_autocomplete',
      'weight' => 5,
    ),
  );

  // Exported field_instance: 'node-honors_and_awards-field_operational_units'
  $field_instances['node-honors_and_awards-field_operational_units'] = array(
    'bundle' => 'honors_and_awards',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'Functional group/team (ex: Institute, Lab, Administration, Advisory Boards)',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'taxonomy',
        'settings' => array(),
        'type' => 'taxonomy_term_reference_link',
        'weight' => 3,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_operational_units',
    'label' => 'Operational Unit(s)',
    'required' => 0,
    'rubik_edit_field_display' => 'default',
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'autocomplete_deluxe',
      'settings' => array(
        'autocomplete_deluxe_path' => 'autocomplete_deluxe/taxonomy',
        'delimiter' => '',
        'limit' => 10,
        'min_length' => 0,
        'size' => 60,
      ),
      'type' => 'autocomplete_deluxe_taxonomy',
      'weight' => 4,
    ),
  );

  // Exported field_instance: 'node-honors_and_awards-field_research_tags'
  $field_instances['node-honors_and_awards-field_research_tags'] = array(
    'bundle' => 'honors_and_awards',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'Tag content with related terms here. <i>example: disease name, research areas, proteins, pathways, etc..</i>',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'taxonomy',
        'settings' => array(),
        'type' => 'taxonomy_term_reference_link',
        'weight' => 4,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_research_tags',
    'label' => 'Research Tag(s)',
    'required' => 0,
    'rubik_edit_field_display' => 'default',
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'autocomplete_deluxe',
      'settings' => array(
        'autocomplete_deluxe_path' => 'autocomplete_deluxe/taxonomy',
        'delimiter' => '',
        'limit' => 10,
        'min_length' => 0,
        'size' => 60,
      ),
      'type' => 'autocomplete_deluxe_taxonomy',
      'weight' => 3,
    ),
  );

  // Exported field_instance: 'node-honors_and_awards-field_user_refs'
  $field_instances['node-honors_and_awards-field_user_refs'] = array(
    'bundle' => 'honors_and_awards',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'Tag users related to this content.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'entityreference',
        'settings' => array(
          'link' => FALSE,
        ),
        'type' => 'entityreference_label',
        'weight' => 6,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_user_refs',
    'label' => 'User Reference(s)',
    'required' => 0,
    'rubik_edit_field_display' => 'default',
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'match_operator' => 'CONTAINS',
        'path' => '',
        'references_dialog_add' => 0,
        'references_dialog_edit' => 0,
        'references_dialog_search' => 0,
        'references_dialog_search_view' => '',
        'size' => 60,
      ),
      'type' => 'entityreference_autocomplete',
      'weight' => 6,
    ),
  );

  // Exported field_instance: 'relation-was_awarded-endpoints'
  $field_instances['relation-was_awarded-endpoints'] = array(
    'bundle' => 'was_awarded',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'relation_endpoint',
        'settings' => array(
          'view_modes' => array(
            'file' => 'default',
            'menu_link' => 'default',
            'node' => 'default',
            'profile2' => 'default',
            'profile2_type' => 'default',
            'relation' => 'default',
            'taxonomy_term' => 'default',
            'taxonomy_vocabulary' => 'default',
            'user' => 'default',
          ),
        ),
        'type' => 'relation_endpoint',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'relation',
    'field_name' => 'endpoints',
    'label' => 'endpoints',
    'required' => FALSE,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'module' => 'relation_endpoint',
      'settings' => array(),
      'type' => 'relation_endpoint',
      'weight' => 0,
    ),
  );

  // Translatables
  // Included for use with string extractors like potx.
  t('<b>Autocomplete</b> award name. If none exists one will be created automatically.');
  t('Add any user profiles here.');
  t('Add references to other content. Useful for displaying related articles feeds in the sidebar.');
  t('Additional information about the award and its recipient(s).');
  t('Attach file(s). <i>note: these files will be <b>publicly</b> accessible</i>');
  t('Award Date');
  t('Details');
  t('File(s)');
  t('Functional group/team (ex: Institute, Lab, Administration, Advisory Boards)');
  t('Node Reference(s)');
  t('Operational Unit(s)');
  t('Recipient(s)');
  t('Research Tag(s)');
  t('Tag content with related terms here. <i>example: disease name, research areas, proteins, pathways, etc..</i>');
  t('Tag users related to this content.');
  t('Title');
  t('User Reference(s)');
  t('endpoints');

  return $field_instances;
}
